name: cache

on:
  workflow_dispatch:
    inputs:
      buildx-version:
        required: false
      buildx-driver-opts:
        required: false
  push:
    branches: master
    tags:
      - 'v*.*.*'
  pull_request:
    branches: master

jobs:
  github-first-build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: ${{ github.event.inputs.buildx-version }}
          driver-opts: ${{ github.event.inputs.buildx-driver-opts }}
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-cache-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-cache-
      -
        name: Erase cache
        run: |
          rm -rf /tmp/.buildx-cache/*
      -
        name: Build
        uses: docker/build-push-action@master
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          push: false
          tags: crazymax/test-docker-action:test-cache
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  github-with-cache:
    runs-on: ubuntu-latest
    needs: github-first-build
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: ${{ github.event.inputs.buildx-version }}
          driver-opts: ${{ github.event.inputs.buildx-driver-opts }}
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-cache-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-cache-
      -
        name: Build
        uses: docker/build-push-action@master
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          push: false
          tags: crazymax/test-docker-action:test-cache
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  registry:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: ${{ github.event.inputs.buildx-version }}
          driver-opts: ${{ github.event.inputs.buildx-driver-opts }}
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build
        uses: docker/build-push-action@master
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          push: ${{ github.event_name != 'pull_request' }}
          tags: crazymax/test-docker-action:test-cache
          cache-from: type=registry,ref=crazymax/test-docker-action:test-cache
          cache-to: type=inline
